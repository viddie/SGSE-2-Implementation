{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "User API"
  },
  "host": "user.local",
  "basePath": "/v2",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/signup": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "creates a new user account",
        "description": "confirms wether the creation was succesful or not",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "username": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "role": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user created"
          },
          "422": {
            "description": "Invalid password/email"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "logs in user by creating validation jwt",
        "description": "confirms wether the login was succesful or not",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "succesful login",
            "schema": {
              "type": "object",
              "required": [
                "tokens"
              ],
              "properties": {
                "accessToken": {
                  "type": "string"
                },
                "refreshToken": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Invalid password/username"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    },
    "/user/token": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "refreshes accesToken by passing refreshToken",
        "description": "returns a valid accesToken to constantly verify the user",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "refreshToken",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "refreshToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "succesful login",
            "schema": {
              "type": "object",
              "required": [
                "tokens"
              ],
              "properties": {
                "accessToken": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "passed no token"
          },
          "403": {
            "description": "invalid refresh token"
          },
          "500": {
            "description": "internal server error"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "destroys a refreshToken",
        "description": "prevents a constant abuse of refreshToken",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "refreshToken",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "refreshToken": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Logout successful"
          }
        }
      },
      "delete": {
        "tags": [
          "user"
        ],
        "summary": "Deletes a user",
        "description": "Deletes a user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "schema": {
              "type": "object",
              "required": [
                "userName"
              ],
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "user deleted"
          },
          "400": {
            "description": "invalid user"
          },
          "500": {
            "description": "server error"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "role": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    }
  }
}